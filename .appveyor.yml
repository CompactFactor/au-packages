# AU template: https://github.com/majkinetor/au-packages-template

version: '{build}'
max_jobs: 1
# History plugin requires complete log
#clone_depth: 5
branches:
  only:
  - master
#build:
#  verbosity: minimal

environment:
  # Set au version to use or omit to use the latest. Specify branch name to use development version from Github
  au_version:
  au_push: true
  # Force test: use 1 to test all, or N to split testing into N groups
  au_test_groups: 1

  # Github token to commit pushed packages to repository
  github_user_repo: CompactFactor/au-packages
  github_api_key:
    secure: WOXmV3cLWnTw92fHumLctpFOXXKjHvxZGPtUDphVhwCzhlr//NO4hn2c8XFPXAhh #https://ci.appveyor.com/tools/encrypt

  # ID of the gist used to save run results - create a gist under the github_user (secret or not) and grab the id - https://gist.github.com/name/id
  # Optional, leave empty to create anonymous gist
  gist_id: acb08144abc2af19c24374a4ce0cb596

  # Force test: gist id for test results
  gist_id_test:

  # Chocolatey API key - to push updated packages
  api_key:
    secure: +aWx2H90pKPsFw1g3N9DXdLlcirdn/XbbUyl2jJGB12ffmmk5kFeOen2QqAXO+3y # https://ci.appveyor.com/tools/encrypt

init:
- git config --global user.email "chocolatey@realdimensions.net"
- git config --global user.name "Chocolatey"
- git config --global core.safecrlf false

install:
- ps: 'Get-CimInstance win32_operatingsystem -Property Caption, OSArchitecture, Version | fl Caption, OSArchitecture, Version'
- ps: $PSVersionTable
- git --version
- choco --version
- ps: |
    git clone -q https://github.com/majkinetor/au.git $Env:TEMP/au
    . "$Env:TEMP/au/scripts/Install-AU.ps1" $Env:au_version

- ps: |
    "Build info"
    '  {0,-20} {1}' -f 'SCHEDULED BUILD:', ($Env:APPVEYOR_SCHEDULED_BUILD -eq 'true')
    '  {0,-20} {1}' -f 'FORCED BUILD:'   , ($Env:APPVEYOR_FORCED_BUILD    -eq 'true')
    '  {0,-20} {1}' -f 'RE BUILD:'       , ($Env:APPVEYOR_RE_BUILD        -eq 'true')

# Uncomment the below line if you are using any of the functions from chocolatey-core.extension - https://chocolatey.org/packages/chocolatey-core.extension. Ensure you also have it listed in your package's dependencies
# - cinst chocolatey-core.extension
    
build_script:
- ps: |
    $ErrorActionPreference = 'Continue'

    if ($Env:APPVEYOR_PROJECT_NAME  -like '*test*') { ./test_all.ps1 "random $Env:au_test_groups"; return }

    if ( ($Env:APPVEYOR_SCHEDULED_BUILD -ne 'true') -and ($Env:APPVEYOR_FORCED_BUILD -ne 'true') ) {
        switch -regex ($Env:APPVEYOR_REPO_COMMIT_MESSAGE)
        {
            '\[AU (.+?)\]'   { $forced = $Matches[1] }

            '\[PUSH (.+?)\]' {
                $packages = $Matches[1] -split ' '
                Write-Host "PUSHING PACKAGES: $packages"
                foreach ($package in $packages) {
                    Write-Host ("{0}`n{1}`n" -f ('-'*60), "PACKAGE: $package")
                    $package_dir = ls -recurse | ? { $_.Name -eq "$package.nuspec"} | select -First 1 | % Directory
                    if (!$package_dir) { Write-Warning "Can't find package '$package'"; continue }
                    pushd $package_dir
                      if (Test-Path update.ps1 -ea 0) { ./update.ps1 }
                      choco pack; Push-Package;
                    popd
                }
                return
            }
        }
    }

    ./update_all.ps1 -ForcedPackages $forced
    7z a au_temp.zip $Env:TEMP\chocolatey\au\*

artifacts:
- path: update_info.xml
- path: Update-AUPackages.md
- path: au_temp.zip

notifications:
- provider: GitHubPullRequest
  template: "{{#passed}}:white_check_mark: Package verification completed without issues. PR is now pending human review{{/passed}}{{#failed}}:x: Package verification failed, please review the [Appveyor Logs]({{buildUrl}}) and the provided [Artifacts]({{buildUrl}}/artifacts) before requesting a human reviewer to take a look.{{/failed}}"

#on_finish:
#- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
